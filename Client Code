#include <sys/socket.h>
#include <sys/types.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <string.h>

struct sockaddr_in serv_addr;
int skfd, connect1, r, w, r1, w1;
char serv_ip[] = "127.0.0.1";
unsigned short serv_port = 6669;
char buff1[4096], buff2[4096], buff3[4096], buff4[4096], buff5[4096];
FILE *fp;

int main()
{
    skfd = socket(AF_INET, SOCK_STREAM, 0);
    if (skfd < 0)
    {
        printf("\n CLIENT ERROR: Cannot connect to the socket\n");
        exit(1);
    }
    printf("\n CLIENT: Connected to the socket :)\n");

    serv_addr.sin_family = AF_INET;
    serv_addr.sin_port = htons(serv_port);
    inet_aton(serv_ip, (&serv_addr.sin_addr));

    connect1 = connect(skfd, (struct sockaddr *)&serv_addr, sizeof(serv_addr));
    if (connect1 < 0)
    {
        printf("\n CLIENT ERROR: Cannot connect to the server\n");
        close(skfd);
        exit(1);
    }
    printf("\n CLIENT: Connected to the server successfully\n");

    do
    {
        printf("Enter the filename/substring: \n");
        gets(buff1);

        w = write(skfd, buff1, 4096);
        if (w < 0)
        {
            printf("\n CLIENT ERROR: Cannot write\n");
            close(skfd);
            exit(1);
        }
        if (strcmp(buff1, "Bye") == 0)
            break;

        r = read(skfd, buff2, 4096);
        if (r < 0)
        {
            printf("\n CLIENT ERROR: Cannot read\n");
            close(skfd);
            exit(1);
        }
        else
        {
            printf("\n The file with similar names are:\n");
            printf("\n %s \n", buff2);
        }

        printf("Enter the exact filename to open: \n");
        gets(buff3);

        w1 = write(skfd, buff3, 4096);
        if (w1 < 0)
        {
            printf("\n CLIENT ERROR: Cannot write\n");
            close(skfd);
            exit(1);
        }

        r1 = read(skfd, buff4, 4096);
        if (r1 < 0)
        {
            printf("\n CLIENT ERROR: Cannot read\n");
            close(skfd);
            exit(1);
        }
        else
        {
            if (strcmp(buff4, "File does not exist.") == 0)
            {
                printf("\n Message: %s\n", buff4);
            }
            else if (strcmp(buff4, "It is a directory file, can't open.") == 0)
            {
                printf("\n Message: %s\n", buff4);
            }
            else if (strcmp(buff4, "Can't open since it is an executable file") == 0)
            {
                printf("\n Message: %s\n", buff4);
            }
            else
            {
                printf("\n File content received:\n%s", buff4);

                fp = fopen(buff3, "r");
                if (fp != NULL)
                {
                    printf("\n File already exists locally\n");
                    fread(buff5, sizeof(char), r1, fp);
                    fclose(fp);

                    if (strcmp(buff5, buff4) != 0)
                    {
                        fp = fopen(buff3, "w");
                        fwrite(buff4, sizeof(char), r1, fp);
                        fclose(fp);
                        printf("\n FILE is overwritten since the contents are not the same\n");
                    }
                    else
                    {
                        printf("\n The file contents are the same; no copying is done\n");
                    }
                }
                else
                {
                    fp = fopen(buff3, "w");
                    fwrite(buff4, sizeof(char), r1, fp);
                    fclose(fp);
                    printf("\n File created successfully on the client side\n");
                }
            }
        }

        
        char choice[4]; 
        printf("\nDo you want to continue? (Yes/No): ");
        gets(choice); 

        if (strcasecmp(choice, "No") == 0) 
            break;

    } while (1);

    close(skfd);
    return 0;
}
